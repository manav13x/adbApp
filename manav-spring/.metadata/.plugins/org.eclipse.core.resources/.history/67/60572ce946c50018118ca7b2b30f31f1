package com.verizon.mongoDemo.restapi;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.verizon.mongoDemo.model.Vehicle;
import com.verizon.mongoDemo.service.VehicleServiceImpl;

@RestController
@RequestMapping("/items")
public class VechicleApi {

	@Autowired
	private VehicleServiceImpl service;

	@GetMapping
	public ResponseEntity<List<Vehicle>> getAllVehicles(){
		ResponseEntity<List<Vehicle>> resp = null;
		List<Vehicle> items = service.getVehicles();
		if(items!=null && items.size()>0)
			resp = new ResponseEntity<List<Vehicle>>(items,HttpStatus.OK);
		else
			resp = new ResponseEntity<List<Vehicle>>(HttpStatus.NOT_FOUND);
		return resp;
	}
	
	@GetMapping("{icode}")
	public ResponseEntity<Vehicle> getVehicle(@PathVariable("icode") int icode){
		ResponseEntity<Vehicle> resp = null;
		Vehicle item = service.getVehicle(icode);
		if(item!=null)
			resp = new ResponseEntity<>(item,HttpStatus.OK);
		else
			resp= new ResponseEntity<>(HttpStatus.NOT_FOUND);
		return resp;
	}
	
	@PostMapping
	public ResponseEntity<Vehicle> additem(@RequestBody Vehicle item){
		ResponseEntity<Vehicle> resp = null;
	
		if(item!=null && !service.exists(item.getiCode())){
			service.addVehicle(item);
			resp = new ResponseEntity<Vehicle>(item,HttpStatus.OK);
		}
		else
		{
			resp = new ResponseEntity<Vehicle>(HttpStatus.CONFLICT);
		
		}
		return resp;
	}
	@PutMapping
	public ResponseEntity<Vehicle> updateitem(@RequestBody Vehicle item){
		ResponseEntity<Vehicle> resp = null;
	
		if(item!=null){
			service.updateVehicle(item);
			resp = new ResponseEntity<Vehicle>(item,HttpStatus.OK);
		}
		else
		{
			resp = new ResponseEntity<Vehicle>(HttpStatus.NOT_FOUND);
		
		}
		return resp;
	}
@DeleteMapping("{icode}")
public ResponseEntity<Void> deleteitem(@PathVariable("icode") int icode){
	ResponseEntity<Void> resp = null;

	if(service.exists(icode)){
		service.removeVehicle(icode);
		resp = new ResponseEntity<>(HttpStatus.OK);
	}
	else
	{
		resp = new ResponseEntity<>(HttpStatus.NOT_FOUND);
	
	}
	return resp;
}
}